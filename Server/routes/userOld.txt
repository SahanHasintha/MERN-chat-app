const User = require('../models/user');

const Register =async (formData) => {
    try {
        const {email} = formData;
        let user = await User.findOne({email});
        if(user){
            return {error :'Have a user for this email'}
        }
        user = new User(formData);
        await user.save();
        return {user};
    } catch (err) {
        console.log(err.message);
    }
}

const Login = async (formData) => {
    try {
        const {password, email} = formData;
        const user = await User.findOne({email});
        if(!user){
            return {error:'Invalid credential'};
        }
        if(password === user.password){
            return {user};
        }else{
            return {error: 'Password dont correct'};
        }
    } catch (err) {
        console.log(err.message);
    }
}

const addChatSender = async ({chatId, chatName, user, users}) => {
    try {
        let userr = await User.findById(user._id)
        if(!userr){
                return {error:'Something went wrong'} ;
        }
        const chat =  userr.chats.find((c)=> c.chatId === chatId)
        if(!chat){
            userr.chats.unshift({chatId, chatName, users})
            await userr.save();
            return {chatSender: userr.chats.find(c => c.chatId === chatId)};
        }
        return {chatSender: userr.chats.find(c => c.chatId === chatId)};
    } catch (err) {
        console.log(err.message);
    }
}

const addChatReciever = async ({chatId, chatName, user, users}) => {
    try {
        let userr = await User.findById(user._id)
        if(!userr){
                return {error:'Something went wrong'} ;
        }
        const chat =  userr.chats.find((c)=> c.chatId === chatId)
        if(!chat){
            userr.chats.unshift({chatId, chatName, users})
            await userr.save();
            return {chatReciever: userr.chats.find(c => c.chatId === chatId)};
        }
        return {chatReciever: userr.chats.find(c => c.chatId === chatId)};
    } catch (err) {
        console.log(err.message);
    }
}

const addMessage = async ({message, senderId, senderName, chatId}) => {
    try {
        console.log('chatId:',chatId)
        const user = await User.findById(senderId);
        if(!user){
            return {error:'No user '}
        }
        const chat = user.chats.find(chat => chat.chatId === chatId);
        chat.messages.unshift({message, senderId, senderName:senderName});
        await user.save();
        return {user};
        
    } catch (err) {
        console.log(err.message);
    }
}

module.exports = {Register, Login, addChatSender, addChatReciever, addMessage}